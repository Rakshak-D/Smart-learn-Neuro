[pytest]
# Set the Python path
testpaths = 
    ai/tests
    tests

# Python files to consider as test files
python_files = 
    test_*.py
    *test.py
    *_test.py

# Python classes to consider as test classes
python_classes = 
    Test*
    *Test
    *TestCase

# Python functions to consider as test functions
python_functions = 
    test_*
    *_test

# Add options to be considered by default
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --durations=10

# Markers for tests
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks integration tests
    unit: marks unit tests
    e2e: marks end-to-end tests
    db: marks tests that require database access
    api: marks API tests
    nlp: marks NLP-related tests
    cv: marks computer vision tests
    speech: marks speech processing tests
    learning: marks adaptive learning tests

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[pytest-cov]
source = 
    ai
    users
    lessons
    assessments

# Coverage reporting
cov_report = 
    term-missing
    html

# Coverage thresholds
fail_under = 80

# Test output settings
[pytest-html]
self_contained_html = true

# JUnit XML output
junit_suite_name = SmartLearn Tests
junit_logging = all
junit_duration_report = call
